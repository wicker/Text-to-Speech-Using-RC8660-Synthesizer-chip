==============================================================================
@ INITIALIZING PHASE
==============================================================================

@ Initialize GPIO 91 as an input and rising edge detect

@ Initialize GPIO 10 as a rising edge interrupt detect for COM2 UART

@ Initalize the UART
@ Set DLAB bit in LCR to access Baud Rate Divisor

@ Load divisor value to give 38.4k b/s

@ Toggle DLAB bit back to 0 to give access to Tx and Rx registers

@ Enable Tx interrupt and enable modem status change interrupt

@ Clear FIFO and turn off FIFO mode

@ Hook IRQ procedure address and install out IRQ_DIRECTOR address

@ Initialize interrupt controller for button and UART on IP<10>

==============================================================================
@ RUNTIME PHASE
==============================================================================

@ Wait in the main loop for an interrupt

@ An interrupt has been detected! Test it to determine a source.
@ IRQ_DIRECTOR

@ The interrupt is not from our button or the UART
@ PASS ON

@ The interrupt came from our button on GPIO pin 91
@ BTN_SVC

@ The interrupt came from the CTS# low or THR empty
@ TLKR_SVC

	@ The interrupt did not come from CTS# low
	@ Test if it came from THR empty
	@ If it did, mask THR and return to loop
	@ NOCTS

	@ The interrupt came from CTS# low
	@ Test if it came from THR empty
		@ If THR is high, send character
		@ SEND
		
		@ If THR is low, return to wait loop, CTS# still low

@ Unmask THR, send the character, test if more characters
@ SEND

	@ If more characters (count >= 0) 
		@ Then GOBACK
	@ If no more characters (count < 0) 
		@ Then reset count
		@ Reset address pointer to beginning of message
		@ Then GOBACK

@ Restore from the interrupt
@ GOBACK

